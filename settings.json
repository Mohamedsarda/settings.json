// {
//     // ========== Visuals ==========
//     "editor.cursorSmoothCaretAnimation": "on",
//     "editor.fontFamily": "Input Mono, monospace",
//     "editor.guides.bracketPairs": "active",
//     "editor.lineNumbers": "interval",
//     "editor.renderWhitespace": "boundary",
//     "window.autoDetectColorScheme": true,
//     "workbench.colorTheme": "Vitesse Dark",
//     "workbench.editor.tabActionLocation": "left",
//     "workbench.fontAliasing": "antialiased",
//     "workbench.iconTheme": "catppuccin-mocha",
//     "workbench.list.smoothScrolling": true,
//     "workbench.preferredDarkColorTheme": "Vitesse Dark",
//     "workbench.preferredLightColorTheme": "Vitesse Light",
//     "workbench.productIconTheme": "icons-carbon",
//     "workbench.sideBar.location": "right",
//     "workbench.startupEditor": "newUntitledFile",
//     "workbench.tree.expandMode": "singleClick",
//     "workbench.tree.indent": 10,

//     // ========== Editor ==========
//     "debug.onTaskErrors": "debugAnyway",
//     "diffEditor.ignoreTrimWhitespace": false,
//     "editor.wordSeparators": "`~!@#%^&*()=+[{]}\\|;:'\",.<>/?",
//     "editor.find.addExtraSpaceOnTop": false,
//     "editor.inlineSuggest.enabled": true,
//     "editor.multiCursorModifier": "ctrlCmd",
//     "editor.suggestSelection": "first",
//     "editor.tabSize": 2,
//     "editor.unicodeHighlight.invisibleCharacters": false,
//     "editor.stickyScroll.enabled": true,
//     "editor.hover.sticky": true,
//     "editor.codeActionsOnSave": {
//       "source.fixAll": "never",
//       "source.fixAll.eslint": "explicit",
//       "source.organizeImports": "never"
//     },
//     "explorer.confirmDelete": false,
//     "explorer.confirmDragAndDrop": false,
//     "files.eol": "\n",
//     "files.insertFinalNewline": true,
//     "files.simpleDialog.enable": true,
//     "git.autofetch": true,
//     "git.confirmSync": false,
//     "git.enableSmartCommit": true,
//     "git.untrackedChanges": "separate",
//     "scm.diffDecorationsGutterWidth": 2,
//     "terminal.integrated.cursorBlinking": true,
//     "terminal.integrated.cursorStyle": "line",
//     "terminal.integrated.fontWeight": "300",
//     "terminal.integrated.persistentSessionReviveProcess": "never",
//     "terminal.integrated.tabs.enabled": true,
//     "workbench.editor.closeOnFileDelete": true,
//     "workbench.editor.highlightModifiedTabs": true,
//     "workbench.editor.limit.enabled": true,
//     "workbench.editor.limit.perEditorGroup": true,
//     "workbench.editor.limit.value": 5,
//     "search.exclude": {
//       "**/*.snap": true,
//       "**/*.svg": true,
//       "**/.git": true,
//       "**/.github": false,
//       "**/.nuxt": true,
//       "**/.output": true,
//       "**/.pnpm": true,
//       "**/.vscode": true,
//       "**/.yarn": true,
//       "**/assets": true,
//       "**/bower_components": true,
//       "**/dist/**": true,
//       "**/logs": true,
//       "**/node_modules": true,
//       "**/out/**": true,
//       "**/package-lock.json": true,
//       "**/pnpm-lock.yaml": true,
//       "**/public": true,
//       "**/temp": true,
//       "**/yarn.lock": true,
//       "**/CHANGELOG*": true,
//       "**/LICENSE*": true,
//     },

//     // ==========  Global Level Config, needs to put in User Settings ==========
//     "window.dialogStyle": "custom",
//     "window.nativeTabs": true, // this is great, macOS only
//     "window.title": "${rootName}", // this make tabs more readable
//     "window.titleBarStyle": "custom",
//     "extensions.autoUpdate": "onlyEnabledExtensions",

//     // ========== Extension configs ==========
//     "emmet.showSuggestionsAsSnippets": true,
//     "emmet.triggerExpansionOnTab": false,
//     "errorLens.enabledDiagnosticLevels": [
//       "warning",
//       "error"
//     ],
//     "errorLens.excludeBySource": [
//       "cSpell",
//       "Grammarly",
//       "eslint"
//     ],

//     // ESLint config: https://github.com/antfu/eslint-config
//     "eslint.codeAction.showDocumentation": {
//       "enable": true
//     },
//     "eslint.quiet": true,
//     // Silent the stylistic rules in you IDE, but still auto fix them
//     "eslint.rules.customizations": [
//       { "rule": "style/*", "severity": "off" },
//       { "rule": "format/*", "severity": "off" },
//       { "rule": "*-indent", "severity": "off" },
//       { "rule": "*-spacing", "severity": "off" },
//       { "rule": "*-spaces", "severity": "off" },
//       { "rule": "*-order", "severity": "off" },
//       { "rule": "*-dangle", "severity": "off" },
//       { "rule": "*-newline", "severity": "off" },
//       { "rule": "*quotes", "severity": "off" },
//       { "rule": "*semi", "severity": "off" }
//     ],
//     "eslint.validate": [
//       "javascript",
//       "javascriptreact",
//       "typescript",
//       "typescriptreact",
//       "vue",
//       "html",
//       "markdown",
//       "json",
//       "jsonc",
//       "yaml",
//       "toml"
//     ],

//     "github.copilot.enable": {
//       "*": true,
//       "markdown": true,
//       "plaintext": false,
//     },
//     "cSpell.allowCompoundWords": true,
//     "cSpell.language": "en,en-US",
//     "css.lint.hexColorLength": "ignore",
//     "githubIssues.workingIssueFormatScm": "#${issueNumberLabel}",
//     "githubPullRequests.fileListLayout": "tree",
//     "gitlens.codeLens.authors.enabled": false,
//     "gitlens.codeLens.enabled": false,
//     "gitlens.codeLens.recentChange.enabled": false,
//     "gitlens.menus": {
//       "editor": {
//         "blame": false,
//         "clipboard": true,
//         "compare": true,
//         "history": false,
//         "remote": false
//       },
//       "editorGroup": {
//         "blame": true,
//         "compare": false
//       },
//       "editorTab": {
//         "clipboard": true,
//         "compare": true,
//         "history": true,
//         "remote": true
//       },
//       "explorer": {
//         "clipboard": true,
//         "compare": true,
//         "history": true,
//         "remote": true
//       },
//       "scm": {
//         "authors": true
//       },
//       "scmGroup": {
//         "compare": true,
//         "openClose": true,
//         "stash": true
//       },
//       "scmGroupInline": {
//         "stash": true
//       },
//       "scmItem": {
//         "clipboard": true,
//         "compare": true,
//         "history": true,
//         "remote": false,
//         "stash": true
//       }
//     },
//     "i18n-ally.autoDetection": false,
//     "i18n-ally.displayLanguage": "en",
//     "i18n-ally.ignoredLocales": [],
//     "iconify.annotations": true,
//     "iconify.inplace": true,
//     "svg.preview.mode": "svg",

//     // I only use Prettier for manually formatting
//     "prettier.enable": false,
//     "prettier.printWidth": 200,
//     "prettier.semi": false,
//     "prettier.singleQuote": true,

//     // ========== File Nesting ==========
//     // this might not be up to date with the repo, please check yourself
//     // https://github.com/antfu/vscode-file-nesting-config
//     "explorer.fileNesting.enabled": true,
//     "explorer.fileNesting.expand": false,
//     "explorer.fileNesting.patterns": {
//       "*.asax": "$(capture).*.cs, $(capture).*.vb",
//       "*.ascx": "$(capture).*.cs, $(capture).*.vb",
//       "*.ashx": "$(capture).*.cs, $(capture).*.vb",
//       "*.aspx": "$(capture).*.cs, $(capture).*.vb",
//       "*.bloc.dart": "$(capture).event.dart, $(capture).state.dart",
//       "*.c": "$(capture).h",
//       "*.cc": "$(capture).hpp, $(capture).h, $(capture).hxx",
//       "*.cjs": "$(capture).cjs.map, $(capture).*.cjs, $(capture)_*.cjs",
//       "*.component.ts": "$(capture).component.html, $(capture).component.spec.ts, $(capture).component.css, $(capture).component.scss, $(capture).component.sass, $(capture).component.less",
//       "*.cpp": "$(capture).hpp, $(capture).h, $(capture).hxx",
//       "*.cs": "$(capture).*.cs",
//       "*.cshtml": "$(capture).cshtml.cs",
//       "*.csproj": "*.config, *proj.user, appsettings.*, bundleconfig.json",
//       "*.css": "$(capture).css.map, $(capture).*.css",
//       "*.cxx": "$(capture).hpp, $(capture).h, $(capture).hxx",
//       "*.dart": "$(capture).freezed.dart, $(capture).g.dart",
//       "*.ex": "$(capture).html.eex, $(capture).html.heex, $(capture).html.leex",
//       "*.go": "$(capture)_test.go",
//       "*.java": "$(capture).class",
//       "*.js": "$(capture).js.map, $(capture).*.js, $(capture)_*.js",
//       "*.jsx": "$(capture).js, $(capture).*.jsx, $(capture)_*.js, $(capture)_*.jsx",
//       "*.master": "$(capture).*.cs, $(capture).*.vb",
//       "*.mjs": "$(capture).mjs.map, $(capture).*.mjs, $(capture)_*.mjs",
//       "*.module.ts": "$(capture).resolver.ts, $(capture).controller.ts, $(capture).service.ts",
//       "*.pubxml": "$(capture).pubxml.user",
//       "*.resx": "$(capture).*.resx, $(capture).designer.cs, $(capture).designer.vb",
//       "*.tex": "$(capture).acn, $(capture).acr, $(capture).alg, $(capture).aux, $(capture).bbl, $(capture).blg, $(capture).fdb_latexmk, $(capture).fls, $(capture).glg, $(capture).glo, $(capture).gls, $(capture).idx, $(capture).ind, $(capture).ist, $(capture).lof, $(capture).log, $(capture).lot, $(capture).out, $(capture).pdf, $(capture).synctex.gz, $(capture).toc, $(capture).xdv",
//       "*.ts": "$(capture).js, $(capture).d.ts.map, $(capture).*.ts, $(capture)_*.js, $(capture)_*.ts",
//       "*.tsx": "$(capture).ts, $(capture).*.tsx, $(capture)_*.ts, $(capture)_*.tsx",
//       "*.vbproj": "*.config, *proj.user, appsettings.*, bundleconfig.json",
//       "*.vue": "$(capture).*.ts, $(capture).*.js, $(capture).story.vue",
//       "*.xaml": "$(capture).xaml.cs",
//       "+layout.svelte": "+layout.ts,+layout.ts,+layout.js,+layout.server.ts,+layout.server.js,+layout.gql",
//       "+page.svelte": "+page.server.ts,+page.server.js,+page.ts,+page.js,+page.gql",
//       ".clang-tidy": ".clang-format, .clangd, compile_commands.json",
//       ".env": "*.env, .env.*, .envrc, env.d.ts",
//       ".gitignore": ".gitattributes, .gitmodules, .gitmessage, .mailmap, .git-blame*",
//       ".project": ".classpath",
//       "//": "Last update at 4/29/2023, 2:04:58 PM",
//       "BUILD.bazel": "*.bzl, *.bazel, *.bazelrc, bazel.rc, .bazelignore, .bazelproject, WORKSPACE",
//       "CMakeLists.txt": "*.cmake, *.cmake.in, .cmake-format.yaml, CMakePresets.json",
//       "I*.cs": "$(capture).cs",
//       "artisan": "*.env, .babelrc*, .codecov, .cssnanorc*, .env.*, .envrc, .htmlnanorc*, .lighthouserc.*, .mocha*, .postcssrc*, .terserrc*, api-extractor.json, ava.config.*, babel.config.*, contentlayer.config.*, cssnano.config.*, cypress.*, env.d.ts, formkit.config.*, formulate.config.*, histoire.config.*, htmlnanorc.*, jasmine.*, jest.config.*, jsconfig.*, karma*, lighthouserc.*, playwright.config.*, postcss.config.*, puppeteer.config.*, rspack.config.*, server.php, svgo.config.*, tailwind.config.*, tsconfig.*, tsdoc.*, uno.config.*, unocss.config.*, vitest.config.*, webpack.config.*, webpack.mix.js, windi.config.*",
//       "astro.config.*": "*.env, .babelrc*, .codecov, .cssnanorc*, .env.*, .envrc, .htmlnanorc*, .lighthouserc.*, .mocha*, .postcssrc*, .terserrc*, api-extractor.json, ava.config.*, babel.config.*, contentlayer.config.*, cssnano.config.*, cypress.*, env.d.ts, formkit.config.*, formulate.config.*, histoire.config.*, htmlnanorc.*, jasmine.*, jest.config.*, jsconfig.*, karma*, lighthouserc.*, playwright.config.*, postcss.config.*, puppeteer.config.*, rspack.config.*, svgo.config.*, tailwind.config.*, tsconfig.*, tsdoc.*, uno.config.*, unocss.config.*, vitest.config.*, webpack.config.*, windi.config.*",
//       "cargo.toml": ".clippy.toml, .rustfmt.toml, cargo.lock, clippy.toml, cross.toml, rust-toolchain.toml, rustfmt.toml",
//       "composer.json": ".php*.cache, composer.lock, phpunit.xml*, psalm*.xml",
//       "default.nix": "shell.nix",
//       "deno.json*": "*.env, .env.*, .envrc, api-extractor.json, deno.lock, env.d.ts, import-map.json, import_map.json, jsconfig.*, tsconfig.*, tsdoc.*",
//       "dockerfile": ".dockerignore, docker-compose.*, dockerfile*",
//       "flake.nix": "flake.lock",
//       "gatsby-config.*": "*.env, .babelrc*, .codecov, .cssnanorc*, .env.*, .envrc, .htmlnanorc*, .lighthouserc.*, .mocha*, .postcssrc*, .terserrc*, api-extractor.json, ava.config.*, babel.config.*, contentlayer.config.*, cssnano.config.*, cypress.*, env.d.ts, formkit.config.*, formulate.config.*, gatsby-browser.*, gatsby-node.*, gatsby-ssr.*, gatsby-transformer.*, histoire.config.*, htmlnanorc.*, jasmine.*, jest.config.*, jsconfig.*, karma*, lighthouserc.*, playwright.config.*, postcss.config.*, puppeteer.config.*, rspack.config.*, svgo.config.*, tailwind.config.*, tsconfig.*, tsdoc.*, uno.config.*, unocss.config.*, vitest.config.*, webpack.config.*, windi.config.*",
//       "gemfile": ".ruby-version, gemfile.lock",
//       "go.mod": ".air*, go.sum",
//       "go.work": "go.work.sum",
//       "mix.exs": ".credo.exs, .dialyzer_ignore.exs, .formatter.exs, .iex.exs, .tool-versions, mix.lock",
//       "next.config.*": "*.env, .babelrc*, .codecov, .cssnanorc*, .env.*, .envrc, .htmlnanorc*, .lighthouserc.*, .mocha*, .postcssrc*, .terserrc*, api-extractor.json, ava.config.*, babel.config.*, contentlayer.config.*, cssnano.config.*, cypress.*, env.d.ts, formkit.config.*, formulate.config.*, histoire.config.*, htmlnanorc.*, jasmine.*, jest.config.*, jsconfig.*, karma*, lighthouserc.*, next-env.d.ts, playwright.config.*, postcss.config.*, puppeteer.config.*, rspack.config.*, svgo.config.*, tailwind.config.*, tsconfig.*, tsdoc.*, uno.config.*, unocss.config.*, vitest.config.*, webpack.config.*, windi.config.*",
//       "nuxt.config.*": "*.env, .babelrc*, .codecov, .cssnanorc*, .env.*, .envrc, .htmlnanorc*, .lighthouserc.*, .mocha*, .postcssrc*, .terserrc*, api-extractor.json, ava.config.*, babel.config.*, contentlayer.config.*, cssnano.config.*, cypress.*, env.d.ts, formkit.config.*, formulate.config.*, histoire.config.*, htmlnanorc.*, jasmine.*, jest.config.*, jsconfig.*, karma*, lighthouserc.*, playwright.config.*, postcss.config.*, puppeteer.config.*, rspack.config.*, svgo.config.*, tailwind.config.*, tsconfig.*, tsdoc.*, uno.config.*, unocss.config.*, vitest.config.*, webpack.config.*, windi.config.*",
//       "package.json": ".browserslist*, .circleci*, .commitlint*, .cz-config.js, .czrc, .dlint.json, .dprint.json, .editorconfig, .eslint*, .firebase*, .flowconfig, .github*, .gitlab*, .gitpod*, .huskyrc*, .jslint*, .lintstagedrc*, .markdownlint*, .node-version, .nodemon*, .npm*, .nvmrc, .pm2*, .pnp.*, .pnpm*, .prettier*, .releaserc*, .sentry*, .simple-git-hooks*, .stackblitz*, .styleci*, .stylelint*, .tazerc*, .textlint*, .tool-versions, .travis*, .versionrc*, .vscode*, .watchman*, .xo-config*, .yamllint*, .yarnrc*, Procfile, apollo.config.*, appveyor*, azure-pipelines*, bower.json, build.config.*, commitlint*, crowdin*, dangerfile*, dlint.json, dprint.json, eslint*, firebase.json, grunt*, gulp*, jenkins*, lerna*, lint-staged*, nest-cli.*, netlify*, nodemon*, npm-shrinkwrap.json, nx.*, package-lock.json, package.nls*.json, phpcs.xml, pm2.*, pnpm*, prettier*, pullapprove*, pyrightconfig.json, release-tasks.sh, release.config.*, renovate*, rollup.config.*, rspack*, simple-git-hooks*, stylelint*, tslint*, tsup.config.*, turbo*, typedoc*, unlighthouse*, vercel*, vetur.config.*, webpack*, workspace.json, xo.config.*, yarn*",
//       "pubspec.yaml": ".metadata, .packages, all_lint_rules.yaml, analysis_options.yaml, build.yaml, pubspec.lock, pubspec_overrides.yaml",
//       "pyproject.toml": ".pdm.toml, pdm.lock, pyproject.toml",
//       "quasar.conf.js": "*.env, .babelrc*, .codecov, .cssnanorc*, .env.*, .envrc, .htmlnanorc*, .lighthouserc.*, .mocha*, .postcssrc*, .terserrc*, api-extractor.json, ava.config.*, babel.config.*, contentlayer.config.*, cssnano.config.*, cypress.*, env.d.ts, formkit.config.*, formulate.config.*, histoire.config.*, htmlnanorc.*, jasmine.*, jest.config.*, jsconfig.*, karma*, lighthouserc.*, playwright.config.*, postcss.config.*, puppeteer.config.*, quasar.extensions.json, rspack.config.*, svgo.config.*, tailwind.config.*, tsconfig.*, tsdoc.*, uno.config.*, unocss.config.*, vitest.config.*, webpack.config.*, windi.config.*",
//       "readme*": "authors, backers*, changelog*, citation*, code_of_conduct*, codeowners, contributing*, contributors, copying, credits, governance.md, history.md, license*, maintainers, readme*, security.md, sponsors*",
//       "remix.config.*": "*.env, .babelrc*, .codecov, .cssnanorc*, .env.*, .envrc, .htmlnanorc*, .lighthouserc.*, .mocha*, .postcssrc*, .terserrc*, api-extractor.json, ava.config.*, babel.config.*, contentlayer.config.*, cssnano.config.*, cypress.*, env.d.ts, formkit.config.*, formulate.config.*, histoire.config.*, htmlnanorc.*, jasmine.*, jest.config.*, jsconfig.*, karma*, lighthouserc.*, playwright.config.*, postcss.config.*, puppeteer.config.*, remix.*, rspack.config.*, svgo.config.*, tailwind.config.*, tsconfig.*, tsdoc.*, uno.config.*, unocss.config.*, vitest.config.*, webpack.config.*, windi.config.*",
//       "rush.json": ".browserslist*, .circleci*, .commitlint*, .cz-config.js, .czrc, .dlint.json, .dprint.json, .editorconfig, .eslint*, .firebase*, .flowconfig, .github*, .gitlab*, .gitpod*, .huskyrc*, .jslint*, .lintstagedrc*, .markdownlint*, .node-version, .nodemon*, .npm*, .nvmrc, .pm2*, .pnp.*, .pnpm*, .prettier*, .releaserc*, .sentry*, .simple-git-hooks*, .stackblitz*, .styleci*, .stylelint*, .tazerc*, .textlint*, .tool-versions, .travis*, .versionrc*, .vscode*, .watchman*, .xo-config*, .yamllint*, .yarnrc*, Procfile, apollo.config.*, appveyor*, azure-pipelines*, bower.json, build.config.*, commitlint*, crowdin*, dangerfile*, dlint.json, dprint.json, eslint*, firebase.json, grunt*, gulp*, jenkins*, lerna*, lint-staged*, nest-cli.*, netlify*, nodemon*, npm-shrinkwrap.json, nx.*, package-lock.json, package.nls*.json, phpcs.xml, pm2.*, pnpm*, prettier*, pullapprove*, pyrightconfig.json, release-tasks.sh, release.config.*, renovate*, rollup.config.*, rspack*, simple-git-hooks*, stylelint*, tslint*, tsup.config.*, turbo*, typedoc*, unlighthouse*, vercel*, vetur.config.*, webpack*, workspace.json, xo.config.*, yarn*",
//       "shims.d.ts": "*.d.ts",
//       "svelte.config.*": "*.env, .babelrc*, .codecov, .cssnanorc*, .env.*, .envrc, .htmlnanorc*, .lighthouserc.*, .mocha*, .postcssrc*, .terserrc*, api-extractor.json, ava.config.*, babel.config.*, contentlayer.config.*, cssnano.config.*, cypress.*, env.d.ts, formkit.config.*, formulate.config.*, histoire.config.*, houdini.config.*, htmlnanorc.*, jasmine.*, jest.config.*, jsconfig.*, karma*, lighthouserc.*, mdsvex.config.js, playwright.config.*, postcss.config.*, puppeteer.config.*, rspack.config.*, svgo.config.*, tailwind.config.*, tsconfig.*, tsdoc.*, uno.config.*, unocss.config.*, vite.config.*, vitest.config.*, webpack.config.*, windi.config.*",
//       "vite.config.*": "*.env, .babelrc*, .codecov, .cssnanorc*, .env.*, .envrc, .htmlnanorc*, .lighthouserc.*, .mocha*, .postcssrc*, .terserrc*, api-extractor.json, ava.config.*, babel.config.*, contentlayer.config.*, cssnano.config.*, cypress.*, env.d.ts, formkit.config.*, formulate.config.*, histoire.config.*, htmlnanorc.*, jasmine.*, jest.config.*, jsconfig.*, karma*, lighthouserc.*, playwright.config.*, postcss.config.*, puppeteer.config.*, rspack.config.*, svgo.config.*, tailwind.config.*, tsconfig.*, tsdoc.*, uno.config.*, unocss.config.*, vitest.config.*, webpack.config.*, windi.config.*",
//       "vue.config.*": "*.env, .babelrc*, .codecov, .cssnanorc*, .env.*, .envrc, .htmlnanorc*, .lighthouserc.*, .mocha*, .postcssrc*, .terserrc*, api-extractor.json, ava.config.*, babel.config.*, contentlayer.config.*, cssnano.config.*, cypress.*, env.d.ts, formkit.config.*, formulate.config.*, histoire.config.*, htmlnanorc.*, jasmine.*, jest.config.*, jsconfig.*, karma*, lighthouserc.*, playwright.config.*, postcss.config.*, puppeteer.config.*, rspack.config.*, svgo.config.*, tailwind.config.*, tsconfig.*, tsdoc.*, uno.config.*, unocss.config.*, vitest.config.*, webpack.config.*, windi.config.*"
//     },
//     "json.schemas": [

//     ],
//   }

{
  "[handlebars]": {
    "editor.formatOnSave": false
  },
  "[markdown]": {
    "editor.quickSuggestions": {
      "comments": "off",
      "other": "on",
      "strings": "off"
    }
  },
  "[typescript]": {
    "editor.colorDecorators": true,
    "editor.defaultFormatter": "esbenp.prettier-vscode"
  },
  "[astro]": {
    // "editor.defaultFormatter": "dprint.dprint"
  },
  "auto-rename-tag.activationOnLanguage": ["*"],
  "blockman.n01LineHeight": 0,
  "breadcrumbs.enabled": true,
  "city-lights-icons-vsc.hidesExplorerArrows": true,
  "colorize.languages": [
    "javascript",
    "javascriptreact",
    "typescript",
    "typescriptreact"
  ],
  "css.validate": true,
  "customizeUI.titleBar": "frameless",
  "diffEditor.diffAlgorithm": "advanced",
  "diffEditor.wordWrap": "off",
  "diffEditor.experimental.useVersion2": true,
  "editor.acceptSuggestionOnEnter": "smart",
  "editor.accessibilitySupport": "off",
  "editor.autoIndent": "full",
  "editor.bracketPairColorization.enabled": true,
  "editor.bracketPairColorization.independentColorPoolPerBracketType": true,
  "editor.codeActionsOnSave": {
    "source.fixAll.eslint": "explicit"
  },
  "editor.codeLensFontSize": 12,
  "editor.cursorSmoothCaretAnimation": "on",
  "editor.cursorStyle": "block",
  "editor.defaultFormatter": "esbenp.prettier-vscode",
  "editor.foldingStrategy": "indentation",
  "editor.fontFamily": "Berkeley Mono, Recursive Mono Casual Static, Comic Code, SF Mono, JetBrains Mono, IBMPlexMono, Fira Code, Dank Mono, monospace",
  "editor.fontLigatures": false,
  "editor.fontLigatures": "'ss01', 'ss02', 'ss03', 'ss04', 'ss05', 'ss06', 'ss07', 'ss08', 'calt', 'dlig'",
  "editor.fontSize": 16,
  "editor.fontWeight": 500,
  "editor.formatOnSave": true,
  "editor.gotoLocation.multipleDeclarations": "goto",
  "editor.gotoLocation.multipleDefinitions": "goto",
  "editor.gotoLocation.multipleImplementations": "goto",
  "editor.gotoLocation.multipleReferences": "gotoAndPeek",
  "editor.gotoLocation.multipleTypeDefinitions": "gotoAndPeek",
  "editor.guides.bracketPairs": false,
  "editor.guides.indentation": false,
  "editor.hideCursorInOverviewRuler": true,
  "editor.inlayHints.enabled": "offUnlessPressed",
  "editor.inlineSuggest.enabled": true,
  "editor.insertSpaces": true,
  "editor.lineHeight": 23,
  "editor.linkedEditing": true,
  "editor.minimap.maxColumn": 80,
  "editor.minimap.renderCharacters": false,
  "editor.minimap.showSlider": "always",
  "editor.multiCursorModifier": "ctrlCmd",
  "editor.renderLineHighlight": "all",
  "editor.renderWhitespace": "all",
  "editor.scrollBeyondLastLine": false,
  "editor.showFoldingControls": "always",
  "editor.suggest.localityBonus": true,
  "editor.suggestSelection": "recentlyUsedByPrefix",
  "editor.tabCompletion": "on",
  "editor.tabSize": 2,
  "editor.tokenColorCustomizations": {
    "[*Light*]": {
      "textMateRules": [
        {
          "scope": "ref.matchtext",
          "settings": {
            "foreground": "#000"
          }
        }
      ]
    },
    "[*Dark*]": {
      "textMateRules": [
        {
          "scope": "ref.matchtext",
          "settings": {
            "foreground": "#fff"
          }
        }
      ]
    },
    "textMateRules": []
  },
  "editor.unfoldOnClickAfterEndOfLine": true,
  "editor.wordSeparators": "`~!@#$%^&*()-=+[{]}\\|;:'\",.<>/?",
  "editor.wordWrap": "off",
  "emmet.includeLanguages": {
    "javascript": "javascriptreact",
    "jsx-sublime-babel-tags": "javascriptreact",
    "tsx": "typescriptreact",
    "njk": "html",
    "nunjucks": "html",
    "postcss": "css"
  },
  "emmet.syntaxProfiles": {
    "postcss": "css"
  },
  "emmet.showAbbreviationSuggestions": true,
  "emmet.showSuggestionsAsSnippets": true,
  "errorLens.enabledDiagnosticLevels": ["warning", "info", "hint"],
  "errorLens.messageTemplate": "($source) $message",
  "errorLens.removeLinebreaks": false,
  "esQuotes.defaultQuote": "'",
  "eslint.lintTask.enable": true,
  "eslint.packageManager": "yarn",
  "eslint.run": "onSave",
  "explorer.confirmDelete": false,
  "explorer.fileNesting.expand": true,
  "explorer.fileNesting.patterns": {
    "//": "Last update at 26/05/2024, 08:51:55",
    ".clang-tidy": ".clang-format, .clangd, compile_commands.json",
    ".env": "*.env, .env.*, .envrc, env.d.ts",
    ".gitignore": ".gitattributes, .gitmodules, .gitmessage, .mailmap, .git-blame*",
    ".project": ".classpath",
    "+layout.svelte": "+layout.ts,+layout.ts,+layout.js,+layout.server.ts,+layout.server.js,+layout.gql",
    "+page.svelte": "+page.server.ts,+page.server.js,+page.ts,+page.js,+page.gql",
    "app.config.*": "*.env, .babelrc*, .codecov, .cssnanorc*, .env.*, .envrc, .htmlnanorc*, .lighthouserc.*, .mocha*, .postcssrc*, .terserrc*, api-extractor.json, ava.config.*, babel.config.*, capacitor.config.*, contentlayer.config.*, cssnano.config.*, cypress.*, env.d.ts, formkit.config.*, formulate.config.*, histoire.config.*, htmlnanorc.*, i18n.config.*, ionic.config.*, jasmine.*, jest.config.*, jsconfig.*, karma*, lighthouserc.*, panda.config.*, playwright.config.*, postcss.config.*, puppeteer.config.*, rspack.config.*, sst.config.*, svgo.config.*, tailwind.config.*, tsconfig.*, tsdoc.*, uno.config.*, unocss.config.*, vitest.config.*, vuetify.config.*, webpack.config.*, windi.config.*",
    "artisan": "*.env, .babelrc*, .codecov, .cssnanorc*, .env.*, .envrc, .htmlnanorc*, .lighthouserc.*, .mocha*, .postcssrc*, .terserrc*, api-extractor.json, ava.config.*, babel.config.*, capacitor.config.*, contentlayer.config.*, cssnano.config.*, cypress.*, env.d.ts, formkit.config.*, formulate.config.*, histoire.config.*, htmlnanorc.*, i18n.config.*, ionic.config.*, jasmine.*, jest.config.*, jsconfig.*, karma*, lighthouserc.*, panda.config.*, playwright.config.*, postcss.config.*, puppeteer.config.*, rspack.config.*, server.php, sst.config.*, svgo.config.*, tailwind.config.*, tsconfig.*, tsdoc.*, uno.config.*, unocss.config.*, vitest.config.*, vuetify.config.*, webpack.config.*, webpack.mix.js, windi.config.*",
    "astro.config.*": "*.env, .babelrc*, .codecov, .cssnanorc*, .env.*, .envrc, .htmlnanorc*, .lighthouserc.*, .mocha*, .postcssrc*, .terserrc*, api-extractor.json, ava.config.*, babel.config.*, capacitor.config.*, contentlayer.config.*, cssnano.config.*, cypress.*, env.d.ts, formkit.config.*, formulate.config.*, histoire.config.*, htmlnanorc.*, i18n.config.*, ionic.config.*, jasmine.*, jest.config.*, jsconfig.*, karma*, lighthouserc.*, panda.config.*, playwright.config.*, postcss.config.*, puppeteer.config.*, rspack.config.*, sst.config.*, svgo.config.*, tailwind.config.*, tsconfig.*, tsdoc.*, uno.config.*, unocss.config.*, vitest.config.*, vuetify.config.*, webpack.config.*, windi.config.*",
    "BUILD.bazel": "*.bzl, *.bazel, *.bazelrc, bazel.rc, .bazelignore, .bazelproject, WORKSPACE",
    "Cargo.toml": ".clippy.toml, .rustfmt.toml, cargo.lock, clippy.toml, cross.toml, rust-toolchain.toml, rustfmt.toml",
    "CMakeLists.txt": "*.cmake, *.cmake.in, .cmake-format.yaml, CMakePresets.json, CMakeCache.txt",
    "composer.json": ".php*.cache, composer.lock, phpunit.xml*, psalm*.xml",
    "default.nix": "shell.nix",
    "deno.json*": "*.env, .env.*, .envrc, api-extractor.json, deno.lock, env.d.ts, import-map.json, import_map.json, jsconfig.*, tsconfig.*, tsdoc.*",
    "Dockerfile": "*.dockerfile, .devcontainer.*, .dockerignore, compose.*, docker-compose.*, dockerfile*",
    "flake.nix": "flake.lock",
    "gatsby-config.*": "*.env, .babelrc*, .codecov, .cssnanorc*, .env.*, .envrc, .htmlnanorc*, .lighthouserc.*, .mocha*, .postcssrc*, .terserrc*, api-extractor.json, ava.config.*, babel.config.*, capacitor.config.*, contentlayer.config.*, cssnano.config.*, cypress.*, env.d.ts, formkit.config.*, formulate.config.*, gatsby-browser.*, gatsby-node.*, gatsby-ssr.*, gatsby-transformer.*, histoire.config.*, htmlnanorc.*, i18n.config.*, ionic.config.*, jasmine.*, jest.config.*, jsconfig.*, karma*, lighthouserc.*, panda.config.*, playwright.config.*, postcss.config.*, puppeteer.config.*, rspack.config.*, sst.config.*, svgo.config.*, tailwind.config.*, tsconfig.*, tsdoc.*, uno.config.*, unocss.config.*, vitest.config.*, vuetify.config.*, webpack.config.*, windi.config.*",
    "gemfile": ".ruby-version, gemfile.lock",
    "go.mod": ".air*, go.sum",
    "go.work": "go.work.sum",
    "hatch.toml": ".editorconfig, .flake8, .isort.cfg, .python-version, hatch.toml, requirements*.in, requirements*.pip, requirements*.txt, tox.ini",
    "I*.cs": "$(capture).cs",
    "Makefile": "*.mk",
    "mix.exs": ".credo.exs, .dialyzer_ignore.exs, .formatter.exs, .iex.exs, .tool-versions, mix.lock",
    "next.config.*": "*.env, .babelrc*, .codecov, .cssnanorc*, .env.*, .envrc, .htmlnanorc*, .lighthouserc.*, .mocha*, .postcssrc*, .terserrc*, api-extractor.json, ava.config.*, babel.config.*, capacitor.config.*, contentlayer.config.*, cssnano.config.*, cypress.*, env.d.ts, formkit.config.*, formulate.config.*, histoire.config.*, htmlnanorc.*, i18n.config.*, ionic.config.*, jasmine.*, jest.config.*, jsconfig.*, karma*, lighthouserc.*, next-env.d.ts, next-i18next.config.*, panda.config.*, playwright.config.*, postcss.config.*, puppeteer.config.*, rspack.config.*, sst.config.*, svgo.config.*, tailwind.config.*, tsconfig.*, tsdoc.*, uno.config.*, unocss.config.*, vitest.config.*, vuetify.config.*, webpack.config.*, windi.config.*",
    "nuxt.config.*": "*.env, .babelrc*, .codecov, .cssnanorc*, .env.*, .envrc, .htmlnanorc*, .lighthouserc.*, .mocha*, .nuxtignore, .nuxtrc, .postcssrc*, .terserrc*, api-extractor.json, ava.config.*, babel.config.*, capacitor.config.*, contentlayer.config.*, cssnano.config.*, cypress.*, env.d.ts, formkit.config.*, formulate.config.*, histoire.config.*, htmlnanorc.*, i18n.config.*, ionic.config.*, jasmine.*, jest.config.*, jsconfig.*, karma*, lighthouserc.*, panda.config.*, playwright.config.*, postcss.config.*, puppeteer.config.*, rspack.config.*, sst.config.*, svgo.config.*, tailwind.config.*, tsconfig.*, tsdoc.*, uno.config.*, unocss.config.*, vitest.config.*, vuetify.config.*, webpack.config.*, windi.config.*",
    "package.json": ".browserslist*, .circleci*, .commitlint*, .cz-config.js, .czrc, .dlint.json, .dprint.json*, .editorconfig, .eslint*, .firebase*, .flowconfig, .github*, .gitlab*, .gitmojirc.json, .gitpod*, .huskyrc*, .jslint*, .knip.*, .lintstagedrc*, .markdownlint*, .node-version, .nodemon*, .npm*, .nvmrc, .pm2*, .pnp.*, .pnpm*, .prettier*, .pylintrc, .release-please*.json, .releaserc*, .ruff.toml, .sentry*, .simple-git-hooks*, .stackblitz*, .styleci*, .stylelint*, .tazerc*, .textlint*, .tool-versions, .travis*, .versionrc*, .vscode*, .watchman*, .xo-config*, .yamllint*, .yarnrc*, Procfile, apollo.config.*, appveyor*, azure-pipelines*, biome.json, bower.json, build.config.*, bun.lockb, commitlint*, crowdin*, dangerfile*, dlint.json, dprint.json*, electron-builder.*, eslint*, firebase.json, grunt*, gulp*, jenkins*, knip.*, lerna*, lint-staged*, nest-cli.*, netlify*, nodemon*, npm-shrinkwrap.json, nx.*, package-lock.json, package.nls*.json, phpcs.xml, pm2.*, pnpm*, prettier*, pullapprove*, pyrightconfig.json, release-please*.json, release-tasks.sh, release.config.*, renovate*, rollup.config.*, rspack*, ruff.toml, simple-git-hooks*, sonar-project.properties, stylelint*, tslint*, tsup.config.*, turbo*, typedoc*, unlighthouse*, vercel*, vetur.config.*, webpack*, workspace.json, xo.config.*, yarn*",
    "Pipfile": ".editorconfig, .flake8, .isort.cfg, .python-version, Pipfile, Pipfile.lock, requirements*.in, requirements*.pip, requirements*.txt, tox.ini",
    "pubspec.yaml": ".metadata, .packages, all_lint_rules.yaml, analysis_options.yaml, build.yaml, pubspec.lock, pubspec_overrides.yaml",
    "pyproject.toml": ".commitlint*, .dlint.json, .dprint.json*, .editorconfig, .eslint*, .flake8, .flowconfig, .isort.cfg, .jslint*, .lintstagedrc*, .markdownlint*, .pdm-python, .pdm.toml, .prettier*, .pylintrc, .python-version, .ruff.toml, .stylelint*, .textlint*, .xo-config*, .yamllint*, MANIFEST.in, Pipfile, Pipfile.lock, biome.json, commitlint*, dangerfile*, dlint.json, dprint.json*, eslint*, hatch.toml, lint-staged*, pdm.lock, phpcs.xml, poetry.lock, poetry.toml, prettier*, pyproject.toml, pyrightconfig.json, requirements*.in, requirements*.pip, requirements*.txt, ruff.toml, setup.cfg, setup.py, stylelint*, tox.ini, tslint*, xo.config.*",
    "quasar.conf.js": "*.env, .babelrc*, .codecov, .cssnanorc*, .env.*, .envrc, .htmlnanorc*, .lighthouserc.*, .mocha*, .postcssrc*, .terserrc*, api-extractor.json, ava.config.*, babel.config.*, capacitor.config.*, contentlayer.config.*, cssnano.config.*, cypress.*, env.d.ts, formkit.config.*, formulate.config.*, histoire.config.*, htmlnanorc.*, i18n.config.*, ionic.config.*, jasmine.*, jest.config.*, jsconfig.*, karma*, lighthouserc.*, panda.config.*, playwright.config.*, postcss.config.*, puppeteer.config.*, quasar.extensions.json, rspack.config.*, sst.config.*, svgo.config.*, tailwind.config.*, tsconfig.*, tsdoc.*, uno.config.*, unocss.config.*, vitest.config.*, vuetify.config.*, webpack.config.*, windi.config.*",
    "readme*": "AUTHORS, Authors, BACKERS*, Backers*, CHANGELOG*, CITATION*, CODEOWNERS, CODE_OF_CONDUCT*, CONTRIBUTING*, CONTRIBUTORS, COPYING*, CREDITS, Changelog*, Citation*, Code_Of_Conduct*, Codeowners, Contributing*, Contributors, Copying*, Credits, GOVERNANCE.MD, Governance.md, HISTORY.MD, History.md, LICENSE*, License*, MAINTAINERS, Maintainers, RELEASE_NOTES*, Release_Notes*, SECURITY.MD, SPONSORS*, Security.md, Sponsors*, authors, backers*, changelog*, citation*, code_of_conduct*, codeowners, contributing*, contributors, copying*, credits, governance.md, history.md, license*, maintainers, release_notes*, security.md, sponsors*",
    "Readme*": "AUTHORS, Authors, BACKERS*, Backers*, CHANGELOG*, CITATION*, CODEOWNERS, CODE_OF_CONDUCT*, CONTRIBUTING*, CONTRIBUTORS, COPYING*, CREDITS, Changelog*, Citation*, Code_Of_Conduct*, Codeowners, Contributing*, Contributors, Copying*, Credits, GOVERNANCE.MD, Governance.md, HISTORY.MD, History.md, LICENSE*, License*, MAINTAINERS, Maintainers, RELEASE_NOTES*, Release_Notes*, SECURITY.MD, SPONSORS*, Security.md, Sponsors*, authors, backers*, changelog*, citation*, code_of_conduct*, codeowners, contributing*, contributors, copying*, credits, governance.md, history.md, license*, maintainers, release_notes*, security.md, sponsors*",
    "README*": "AUTHORS, Authors, BACKERS*, Backers*, CHANGELOG*, CITATION*, CODEOWNERS, CODE_OF_CONDUCT*, CONTRIBUTING*, CONTRIBUTORS, COPYING*, CREDITS, Changelog*, Citation*, Code_Of_Conduct*, Codeowners, Contributing*, Contributors, Copying*, Credits, GOVERNANCE.MD, Governance.md, HISTORY.MD, History.md, LICENSE*, License*, MAINTAINERS, Maintainers, RELEASE_NOTES*, Release_Notes*, SECURITY.MD, SPONSORS*, Security.md, Sponsors*, authors, backers*, changelog*, citation*, code_of_conduct*, codeowners, contributing*, contributors, copying*, credits, governance.md, history.md, license*, maintainers, release_notes*, security.md, sponsors*",
    "remix.config.*": "*.env, .babelrc*, .codecov, .cssnanorc*, .env.*, .envrc, .htmlnanorc*, .lighthouserc.*, .mocha*, .postcssrc*, .terserrc*, api-extractor.json, ava.config.*, babel.config.*, capacitor.config.*, contentlayer.config.*, cssnano.config.*, cypress.*, env.d.ts, formkit.config.*, formulate.config.*, histoire.config.*, htmlnanorc.*, i18n.config.*, ionic.config.*, jasmine.*, jest.config.*, jsconfig.*, karma*, lighthouserc.*, panda.config.*, playwright.config.*, postcss.config.*, puppeteer.config.*, remix.*, rspack.config.*, sst.config.*, svgo.config.*, tailwind.config.*, tsconfig.*, tsdoc.*, uno.config.*, unocss.config.*, vitest.config.*, vuetify.config.*, webpack.config.*, windi.config.*",
    "requirements.txt": ".editorconfig, .flake8, .isort.cfg, .python-version, requirements*.in, requirements*.pip, requirements*.txt, tox.ini",
    "rush.json": ".browserslist*, .circleci*, .commitlint*, .cz-config.js, .czrc, .dlint.json, .dprint.json*, .editorconfig, .eslint*, .firebase*, .flowconfig, .github*, .gitlab*, .gitmojirc.json, .gitpod*, .huskyrc*, .jslint*, .knip.*, .lintstagedrc*, .markdownlint*, .node-version, .nodemon*, .npm*, .nvmrc, .pm2*, .pnp.*, .pnpm*, .prettier*, .pylintrc, .release-please*.json, .releaserc*, .ruff.toml, .sentry*, .simple-git-hooks*, .stackblitz*, .styleci*, .stylelint*, .tazerc*, .textlint*, .tool-versions, .travis*, .versionrc*, .vscode*, .watchman*, .xo-config*, .yamllint*, .yarnrc*, Procfile, apollo.config.*, appveyor*, azure-pipelines*, biome.json, bower.json, build.config.*, bun.lockb, commitlint*, crowdin*, dangerfile*, dlint.json, dprint.json*, electron-builder.*, eslint*, firebase.json, grunt*, gulp*, jenkins*, knip.*, lerna*, lint-staged*, nest-cli.*, netlify*, nodemon*, npm-shrinkwrap.json, nx.*, package-lock.json, package.nls*.json, phpcs.xml, pm2.*, pnpm*, prettier*, pullapprove*, pyrightconfig.json, release-please*.json, release-tasks.sh, release.config.*, renovate*, rollup.config.*, rspack*, ruff.toml, simple-git-hooks*, sonar-project.properties, stylelint*, tslint*, tsup.config.*, turbo*, typedoc*, unlighthouse*, vercel*, vetur.config.*, webpack*, workspace.json, xo.config.*, yarn*",
    "setup.cfg": ".editorconfig, .flake8, .isort.cfg, .python-version, MANIFEST.in, requirements*.in, requirements*.pip, requirements*.txt, setup.cfg, tox.ini",
    "setup.py": ".editorconfig, .flake8, .isort.cfg, .python-version, MANIFEST.in, requirements*.in, requirements*.pip, requirements*.txt, setup.cfg, setup.py, tox.ini",
    "shims.d.ts": "*.d.ts",
    "svelte.config.*": "*.env, .babelrc*, .codecov, .cssnanorc*, .env.*, .envrc, .htmlnanorc*, .lighthouserc.*, .mocha*, .postcssrc*, .terserrc*, api-extractor.json, ava.config.*, babel.config.*, capacitor.config.*, contentlayer.config.*, cssnano.config.*, cypress.*, env.d.ts, formkit.config.*, formulate.config.*, histoire.config.*, houdini.config.*, htmlnanorc.*, i18n.config.*, ionic.config.*, jasmine.*, jest.config.*, jsconfig.*, karma*, lighthouserc.*, mdsvex.config.js, panda.config.*, playwright.config.*, postcss.config.*, puppeteer.config.*, rspack.config.*, sst.config.*, svgo.config.*, tailwind.config.*, tsconfig.*, tsdoc.*, uno.config.*, unocss.config.*, vite.config.*, vitest.config.*, vuetify.config.*, webpack.config.*, windi.config.*",
    "vite.config.*": "*.env, .babelrc*, .codecov, .cssnanorc*, .env.*, .envrc, .htmlnanorc*, .lighthouserc.*, .mocha*, .postcssrc*, .terserrc*, api-extractor.json, ava.config.*, babel.config.*, capacitor.config.*, contentlayer.config.*, cssnano.config.*, cypress.*, env.d.ts, formkit.config.*, formulate.config.*, histoire.config.*, htmlnanorc.*, i18n.config.*, ionic.config.*, jasmine.*, jest.config.*, jsconfig.*, karma*, lighthouserc.*, panda.config.*, playwright.config.*, postcss.config.*, puppeteer.config.*, rspack.config.*, sst.config.*, svgo.config.*, tailwind.config.*, tsconfig.*, tsdoc.*, uno.config.*, unocss.config.*, vitest.config.*, vuetify.config.*, webpack.config.*, windi.config.*",
    "vue.config.*": "*.env, .babelrc*, .codecov, .cssnanorc*, .env.*, .envrc, .htmlnanorc*, .lighthouserc.*, .mocha*, .postcssrc*, .terserrc*, api-extractor.json, ava.config.*, babel.config.*, capacitor.config.*, contentlayer.config.*, cssnano.config.*, cypress.*, env.d.ts, formkit.config.*, formulate.config.*, histoire.config.*, htmlnanorc.*, i18n.config.*, ionic.config.*, jasmine.*, jest.config.*, jsconfig.*, karma*, lighthouserc.*, panda.config.*, playwright.config.*, postcss.config.*, puppeteer.config.*, rspack.config.*, sst.config.*, svgo.config.*, tailwind.config.*, tsconfig.*, tsdoc.*, uno.config.*, unocss.config.*, vitest.config.*, vuetify.config.*, webpack.config.*, windi.config.*",
    "*.asax": "$(capture).*.cs, $(capture).*.vb",
    "*.ascx": "$(capture).*.cs, $(capture).*.vb",
    "*.ashx": "$(capture).*.cs, $(capture).*.vb",
    "*.aspx": "$(capture).*.cs, $(capture).*.vb",
    "*.axaml": "$(capture).axaml.cs",
    "*.bloc.dart": "$(capture).event.dart, $(capture).state.dart",
    "*.c": "$(capture).h",
    "*.cc": "$(capture).hpp, $(capture).h, $(capture).hxx, $(capture).hh",
    "*.cjs": "$(capture).cjs.map, $(capture).*.cjs, $(capture)_*.cjs",
    "*.component.ts": "$(capture).component.html, $(capture).component.spec.ts, $(capture).component.css, $(capture).component.scss, $(capture).component.sass, $(capture).component.less",
    "*.cpp": "$(capture).hpp, $(capture).h, $(capture).hxx, $(capture).hh",
    "*.cs": "$(capture).*.cs",
    "*.cshtml": "$(capture).cshtml.cs",
    "*.csproj": "*.config, *proj.user, appsettings.*, bundleconfig.json",
    "*.css": "$(capture).css.map, $(capture).*.css",
    "*.cxx": "$(capture).hpp, $(capture).h, $(capture).hxx, $(capture).hh",
    "*.dart": "$(capture).freezed.dart, $(capture).g.dart",
    "*.db": "*.db-shm, *.db-wal",
    "*.ex": "$(capture).html.eex, $(capture).html.heex, $(capture).html.leex",
    "*.fs": "$(capture).fs.js, $(capture).fs.js.map, $(capture).fs.jsx, $(capture).fs.ts, $(capture).fs.tsx, $(capture).fs.rs, $(capture).fs.php, $(capture).fs.dart",
    "*.go": "$(capture)_test.go",
    "*.java": "$(capture).class",
    "*.js": "$(capture).js.map, $(capture).*.js, $(capture)_*.js",
    "*.jsx": "$(capture).js, $(capture).*.jsx, $(capture)_*.js, $(capture)_*.jsx, $(capture).less, $(capture).module.less",
    "*.master": "$(capture).*.cs, $(capture).*.vb",
    "*.md": "$(capture).*",
    "*.mjs": "$(capture).mjs.map, $(capture).*.mjs, $(capture)_*.mjs",
    "*.module.ts": "$(capture).resolver.ts, $(capture).controller.ts, $(capture).service.ts",
    "*.mts": "$(capture).mts.map, $(capture).*.mts, $(capture)_*.mts",
    "*.pubxml": "$(capture).pubxml.user",
    "*.razor": "$(capture).razor.cs, $(capture).razor.css, $(capture).razor.scss",
    "*.resx": "$(capture).*.resx, $(capture).designer.cs, $(capture).designer.vb",
    "*.tex": "$(capture).acn, $(capture).acr, $(capture).alg, $(capture).aux, $(capture).bbl, $(capture).blg, $(capture).fdb_latexmk, $(capture).fls, $(capture).glg, $(capture).glo, $(capture).gls, $(capture).idx, $(capture).ind, $(capture).ist, $(capture).lof, $(capture).log, $(capture).lot, $(capture).out, $(capture).pdf, $(capture).synctex.gz, $(capture).toc, $(capture).xdv",
    "*.ts": "$(capture).js, $(capture).d.ts.map, $(capture).*.ts, $(capture)_*.js, $(capture)_*.ts",
    "*.tsx": "$(capture).ts, $(capture).*.tsx, $(capture)_*.ts, $(capture)_*.tsx, $(capture).less, $(capture).module.less, $(capture).scss, $(capture).module.scss",
    "*.vbproj": "*.config, *proj.user, appsettings.*, bundleconfig.json",
    "*.vue": "$(capture).*.ts, $(capture).*.js, $(capture).story.vue",
    "*.xaml": "$(capture).xaml.cs"
  },
  "extensions.autoUpdate": true,
  "extensions.ignoreRecommendations": true,
  "files.associations": {
    "**/frontmatter.json": "jsonc",
    "**/.frontmatter/config/*.json": "jsonc",
    "*.atml": "html",
    "*.njk": "html",
    "*.fish": "powershell",
    "*.js": "javascript",
    "*.mdx": "markdown",
    ".babelrc": "json",
    ".huskyrc": "json",
    ".env*": "dotenv"
  },
  "files.autoSave": "afterDelay",
  "files.autoSaveDelay": 6000,
  "files.exclude": {
    "**/.DS_Store": true,
    "**/.git": true,
    "**/.hg": true,
    "**/.svn": true,
    "**/CVS": true,
    "**/__MACOSX": true
  },
  "files.simpleDialog.enable": true,
  "files.trimTrailingWhitespace": true,
  "git.allowForcePush": true,
  "git.allowNoVerifyCommit": true,
  "git.autofetch": true,
  "git.confirmSync": false,
  "git.fetchOnPull": true,
  "git.inputValidationSubjectLength": 72,
  "git.mergeEditor": true,
  "github.copilot.enable": {
    "*": true,
    "yaml": true,
    "plaintext": true,
    "markdown": true
  },
  "githubPullRequests.fileListLayout": "flat",
  "githubPullRequests.pullBranch": "never",
  "gitlens.advanced.messages": {
    "suppressFileNotUnderSourceControlWarning": true,
    "suppressGitMissingWarning": true
  },
  "gitlens.blame.ignoreWhitespace": true,
  "gitlens.codeLens.scopes": ["document", "containers", "blocks"],
  "gitlens.keymap": "alternate",
  "gitlens.views.repositories.files.layout": "list",
  "incrementor.enums": [
    ["false", "true"],
    ["let", "const"],
    ["flex", "inline-flex", "block", "inline-block", "inline", "none"]
  ],
  "javascript.inlayHints.enumMemberValues.enabled": true,
  "javascript.inlayHints.functionLikeReturnTypes.enabled": true,
  "javascript.inlayHints.parameterNames.enabled": "all",
  "javascript.inlayHints.parameterTypes.enabled": true,
  "javascript.inlayHints.propertyDeclarationTypes.enabled": true,
  "javascript.inlayHints.variableTypes.enabled": true,
  "javascript.preferences.importModuleSpecifier": "relative",
  "javascript.preferences.importModuleSpecifierEnding": "minimal",
  "javascript.preferences.quoteStyle": "single",
  "javascript.suggest.completeFunctionCalls": true,
  "javascript.updateImportsOnFileMove.enabled": "always",
  "js/ts.implicitProjectConfig.experimentalDecorators": true,
  "keyboard.touchbar.enabled": true,
  "liveshare.featureSet": "stable",
  "liveshare.showInStatusBar": "whileCollaborating",
  "markdown.extension.syntax.plainTheme": true,
  "markdown.preview.fontFamily": "Inter, -apple-system, BlinkMacSystemFont, 'Segoe WPC', 'Segoe UI', system-ui, 'Ubuntu', 'Droid Sans', sans-serif",
  "markdown.validate.enabled": true,
  "markdown.editor.pasteUrlAsFormattedLink.enabled": "smart",
  "merge-conflict.autoNavigateNextConflict.enabled": true,
  "merge-conflict.diffViewPosition": "Below",
  "php.suggest.basic": false,
  "php.validate.enable": false,
  "prettier.semi": false,
  "prettier.singleQuote": true,
  "problems.defaultViewMode": "table",
  "projectManager.git.baseFolders": [],
  "projectManager.groupList": true,
  "projectManager.sortList": "Recent",
  "redhat.telemetry.enabled": false,
  "references.preferredLocation": "view",
  "scss.validate": false,
  "search.collapseResults": "auto",
  "search.followSymlinks": false,
  "search.quickOpen.includeSymbols": false,
  "search.showLineNumbers": true,
  "search.smartCase": true,
  "security.workspace.trust.enabled": false,
  "surround.custom": {
    "promise": {
      "description": "Promise<...>",
      "disabled": false,
      "label": "Promise<...>",
      "languageIds": [
        "javascript",
        "javascriptreact",
        "typescript",
        "typescriptreact",
        "astro"
      ],
      "snippet": "Promise<$TM_SELECTED_TEXT>"
    },
    "console-log": {
      "description": "console.log( ... )",
      "disabled": false,
      "label": "console.log",
      "languageIds": [
        "javascript",
        "javascriptreact",
        "typescript",
        "typescriptreact",
        "astro"
      ],
      "snippet": "console.log(`$TM_SELECTED_TEXT`, $TM_SELECTED_TEXT)"
    },
    "describe": {
      "description": "describe('${1:name}', () => { ... })",
      "disabled": false,
      "label": "describe",
      "languageIds": [
        "javascript",
        "javascriptreact",
        "typescript",
        "typescriptreact"
      ],
      "snippet": "describe('${1:name}', () => {\n\t$TM_SELECTED_TEXT\n})$0"
    },
    "errorBoundary": {
      "description": "<ErrorBoundary>",
      "disabled": false,
      "label": "errorBoundary",
      "languageIds": [
        "javascript",
        "javascriptreact",
        "typescript",
        "typescriptreact"
      ],
      "snippet": "<ErrorBoundary>$TM_SELECTED_TEXT</ErrorBoundary>"
    },
    "es6StringSubstition": {
      "description": "${...}",
      "disabled": false,
      "label": "es6StringSubstition",
      "languageIds": [
        "javascript",
        "javascriptreact",
        "typescript",
        "typescriptreact",
        "astro"
      ],
      "snippet": "${$TM_SELECTED_TEXT}"
    },
    "es6StringSubstitionBackticks": {
      "description": "`${...}`",
      "disabled": false,
      "label": "es6StringSubstitionBackticks",
      "languageIds": [
        "javascript",
        "javascriptreact",
        "typescript",
        "typescriptreact",
        "astro"
      ],
      "snippet": "`${$TM_SELECTED_TEXT}$0`"
    },
    "function": {
      "description": "$( ... )",
      "disabled": false,
      "label": "function",
      "languageIds": [
        "javascript",
        "javascriptreact",
        "typescript",
        "typescriptreact",
        "astro"
      ],
      "snippet": "$1($TM_SELECTED_TEXT)$0"
    },
    "jsxConditional": {
      "description": "{x && ( ... )}",
      "disabled": false,
      "label": "jsxConditional",
      "languageIds": ["javascriptreact", "typescriptreact", "astro"],
      "snippet": "{$0 && ($TM_SELECTED_TEXT)}"
    },
    "jsxConditional2": {
      "description": "{x ? ( ... ) : null}",
      "disabled": false,
      "label": "better jsxConditional",
      "languageIds": ["javascriptreact", "typescriptreact", "astro"],
      "snippet": "{$0 ? ($TM_SELECTED_TEXT) : null}"
    },
    "markdown-link": {
      "description": "[]( ... )",
      "disabled": false,
      "label": "Markdown link [url]",
      "snippet": "[$0]($TM_SELECTED_TEXT)"
    },
    "markdown-link-alt": {
      "description": "[ ... ]()",
      "disabled": false,
      "label": "Markdown link [text]",
      "snippet": "[$TM_SELECTED_TEXT]($0)"
    },
    "number": {
      "description": "Number( ... )",
      "disabled": false,
      "label": "Number",
      "languageIds": [
        "javascript",
        "javascriptreact",
        "typescript",
        "typescriptreact",
        "astro"
      ],
      "snippet": "Number($TM_SELECTED_TEXT)"
    },
    "parse": {
      "description": "JSON.parse( ... )",
      "disabled": false,
      "label": "JSON.parse",
      "languageIds": [
        "javascript",
        "javascriptreact",
        "typescript",
        "typescriptreact",
        "astro"
      ],
      "snippet": "JSON.parse($TM_SELECTED_TEXT)$0"
    },
    "reactFragment": {
      "description": "<Fragment>",
      "disabled": false,
      "label": "fragment",
      "languageIds": ["javascriptreact", "typescriptreact", "astro"],
      "snippet": "<Fragment>$TM_SELECTED_TEXT</Fragment>"
    },
    "reactFragment2": {
      "description": "<>",
      "disabled": false,
      "label": "fragment (simple)",
      "languageIds": ["javascriptreact", "typescriptreact", "astro"],
      "snippet": "<>$TM_SELECTED_TEXT</>"
    },
    "reactUseMemo": {
      "description": "useMemo",
      "disabled": false,
      "label": "useMemo",
      "languageIds": ["javascriptreact", "typescriptreact"],
      "snippet": "useMemo(() => $TM_SELECTED_TEXT, [])"
    },
    "reactUseCallback": {
      "description": "useCallback",
      "disabled": false,
      "label": "useCallback",
      "languageIds": ["javascriptreact", "typescriptreact"],
      "snippet": "useCallback(() => $TM_SELECTED_TEXT, [])"
    },
    "reactForwardRef": {
      "description": "forwardRef",
      "disabled": false,
      "label": "forwardRef",
      "languageIds": ["javascriptreact", "typescriptreact"],
      "snippet": "forwardRef<$1>($TM_SELECTED_TEXT)"
    },
    "stringify": {
      "description": "JSON.stringify( ... )",
      "disabled": false,
      "label": "JSON.stringify",
      "languageIds": [
        "javascript",
        "javascriptreact",
        "typescript",
        "typescriptreact",
        "svelte",
        "html",
        "astro"
      ],
      "snippet": "JSON.stringify($TM_SELECTED_TEXT)$0"
    },
    "suspense": {
      "description": "<Suspense>",
      "disabled": false,
      "label": "suspense",
      "languageIds": ["javascriptreact", "typescriptreact"],
      "snippet": "<Suspense fallback={<Loader />}>$TM_SELECTED_TEXT</Suspense>"
    },
    "svelteIf": {
      "description": "{#if}{/if}",
      "disabled": false,
      "label": "{#if}",
      "languageIds": ["svelte"],
      "snippet": "{#if $1}$TM_SELECTED_TEXT{/if}"
    },
    "svelteIfElse": {
      "description": "{#if}{:else}{/if}",
      "disabled": false,
      "label": "{#if}{:else}",
      "languageIds": ["svelte"],
      "snippet": "{#if $1}$TM_SELECTED_TEXT{:else}$2{/if}"
    },
    "JSXBox": {
      "description": "<Box>",
      "disabled": false,
      "label": "box",
      "languageIds": ["javascriptreact", "typescriptreact", "astro"],
      "snippet": "<Box>$TM_SELECTED_TEXT</Box>"
    },
    "JSXContainer": {
      "description": "<Container>",
      "disabled": false,
      "label": "container",
      "languageIds": ["javascriptreact", "typescriptreact", "astro"],
      "snippet": "<Container>$TM_SELECTED_TEXT</Container>"
    },
    "JSXFlex": {
      "description": "<Flex>",
      "disabled": false,
      "label": "flex",
      "languageIds": ["javascriptreact", "typescriptreact", "astro"],
      "snippet": "<Flex>$TM_SELECTED_TEXT</Flex>"
    },
    "JSXGrid": {
      "description": "<Grid>",
      "disabled": false,
      "label": "grid",
      "languageIds": ["javascriptreact", "typescriptreact", "astro"],
      "snippet": "<Grid>$TM_SELECTED_TEXT</Grid>"
    },
    "TSGeneric": {
      "description": "Generic<>",
      "disabled": false,
      "label": "TS Generic",
      "languageIds": ["typescript", "typescriptreact", "astro"],
      "snippet": "$1<$TM_SELECTED_TEXT, $0>"
    },
    "rem-polished": {
      "description": "${rem($)}",
      "disabled": false,
      "label": "rem",
      "languageIds": [
        "javascript",
        "javascriptreact",
        "typescript",
        "typescriptreact"
      ],
      "snippet": "${rem($TM_SELECTED_TEXT)}"
    },
    "css-var": {
      "description": "var($)",
      "disabled": false,
      "label": "var",
      "languageIds": ["css", "postcss", "javascriptreact", "typescriptreact"],
      "snippet": "var($TM_SELECTED_TEXT)"
    }
  },
  "svelte.enable-ts-plugin": true,
  "terminal.external.osxExec": "iTerm.app",
  "terminal.integrated.env.osx": {
    "FIG_NEW_SESSION": "1",
    "CW_NEW_SESSION": "1",
    "Q_NEW_SESSION": "1"
  },
  "terminal.integrated.fontWeight": 500,
  "terminal.integrated.fontSize": 15,
  "terminal.integrated.lineHeight": 1.2,
  "terminal.integrated.macOptionClickForcesSelection": true,
  "terminal.integrated.minimumContrastRatio": 3,
  "terminal.integrated.scrollback": 8000,
  "turboConsoleLog.includeFileNameAndLineNum": false,
  "turboConsoleLog.quote": "`",
  "typescript.enablePromptUseWorkspaceTsdk": true,
  "typescript.implementationsCodeLens.enabled": true,
  "typescript.inlayHints.enumMemberValues.enabled": true,
  "typescript.inlayHints.functionLikeReturnTypes.enabled": true,
  "typescript.inlayHints.parameterNames.enabled": "literals",
  "typescript.inlayHints.parameterTypes.enabled": true,
  "typescript.inlayHints.propertyDeclarationTypes.enabled": true,
  "typescript.inlayHints.variableTypes.enabled": true,
  "typescript.locale": "en",
  "typescript.preferences.importModuleSpecifierEnding": "minimal",
  "typescript.preferences.quoteStyle": "single",
  "typescript.suggest.completeFunctionCalls": true,
  "typescript.tsserver.log": "off",
  "typescript.updateImportsOnFileMove.enabled": "always",
  "vsintellicode.features.python.deepLearning": "disabled",
  "vsintellicode.java.completionsEnabled": false,
  "vsintellicode.python.completionsEnabled": false,
  "vsintellicode.sql.completionsEnabled": false,
  "window.autoDetectColorScheme": true,
  "window.commandCenter": true,
  "window.newWindowDimensions": "maximized",
  "window.restoreFullscreen": true,
  "window.restoreWindows": "all",
  "window.title": "${rootName}",
  "workbench.colorCustomizations": {
    "[poimandres]": {
      "editorGroup.border": "#404350",
      "panel.border": "#404350",
      "sideBar.border": "#404350",
      "terminalCommandDecoration.defaultBackground": "#767c9d",
      "terminalCommandDecoration.errorBackground": "#d0679d",
      "terminalCommandDecoration.successBackground": "#5DE4c7",
      "editorGutter.commentGlyphForground": "#404350"
    },
    "[poimandres-storm]": {
      "editorGroup.border": "#404350",
      "panel.border": "#404350",
      "sideBar.border": "#404350",
      "terminalCommandDecoration.defaultBackground": "#767c9d",
      "terminalCommandDecoration.errorBackground": "#d0679d",
      "terminalCommandDecoration.successBackground": "#5DE4c7",
      "editorGutter.commentGlyphForground": "#404350"
    },
    "[Rosé Pine Moon]": {
      "editorGroup.border": "#404350",
      "panel.border": "#404350",
      "sideBar.border": "#404350"
    }
  },
  "workbench.colorTheme": "Rosé Pine Moon",
  "workbench.commandPalette.preserveInput": true,
  "workbench.editor.closeOnFileDelete": true,
  "workbench.editor.decorations.badges": true,
  "workbench.editor.decorations.colors": true,
  "workbench.editor.highlightModifiedTabs": true,
  "workbench.editor.limit.enabled": true,
  "workbench.editor.limit.value": 20,
  "workbench.editor.revealIfOpen": true,
  "workbench.editor.tabCloseButton": "left",
  "workbench.editor.wrapTabs": true,
  "workbench.fontAliasing": "antialiased",
  "workbench.iconTheme": "vscode-icons",
  "workbench.layoutControl.enabled": true,
  "workbench.list.horizontalScrolling": true,
  "workbench.list.defaultFindMode": "filter",
  "workbench.preferredDarkColorTheme": "Rosé Pine Moon",
  "workbench.preferredHighContrastColorTheme": "Rosé Pine Moon",
  "workbench.preferredLightColorTheme": "Rosé Pine Dawn",
  "workbench.settings.openDefaultSettings": true,
  "workbench.sideBar.location": "right",
  "workbench.startupEditor": "newUntitledFile",
  "workbench.view.alwaysShowHeaderActions": true,
  "editor.unicodeHighlight.ambiguousCharacters": false,
  "svelte.plugin.svelte.note-new-transformation": false,
  "totalTypeScript.hideAllTips": true,
  "totalTypeScript.hideBasicTips": true,
  "emmet.triggerExpansionOnTab": true,
  "cssCustomProperties.languages": ["css"],
  "cssCustomProperties.files": [["src/**/*.css"]],
  "explorer.fileNesting.enabled": true,
  "workbench.preferredHighContrastLightColorTheme": "Rosé Pine Dawn",
  "editor.suggest.shareSuggestSelections": true,
  "diffEditor.renderSideBySide": false,
  "editor.minimap.enabled": false,
  "[python]": {
    "editor.formatOnType": true
  },
  "vitest.enable": true,
  "gitlens.views.repositories.showIncomingActivity": true,
  "gitlens.views.repositories.branches.layout": "list",
  "gitlens.graph.dimMergeCommits": true,
  "gitlens.graph.showRemoteNames": true,
  "gitlens.mode.statusBar.alignment": "left",
  "errorLens.excludeBySource": ["eslint(@typescript-eslint/no-unused-vars)"],
  "dotenv.enableAutocloaking": false,
  "editor.renderControlCharacters": false,
  "colorize.hide_current_line_decorations": false,
  "colorInfo.languages": [
    {
      "selector": "css",
      "colors": "css"
    },
    {
      "selector": "sass",
      "colors": "css"
    },
    {
      "selector": "scss",
      "colors": "css"
    },
    {
      "selector": "less",
      "colors": "css"
    },
    {
      "selector": "ts",
      "colors": "css"
    },
    {
      "selector": "js",
      "colors": "css"
    }
  ],
  "javascript.referencesCodeLens.enabled": true,
  "javascript.referencesCodeLens.showOnAllFunctions": true,
  "typescript.referencesCodeLens.enabled": true,
  "typescript.referencesCodeLens.showOnAllFunctions": true,
  "svg.preview.mode": "svg",
  "editor.suggest.preview": true,
  "editor.suggest.showStatusBar": true,
  "editor.suggest.snippetsPreventQuickSuggestions": true,
  "path-intellisense.autoTriggerNextSuggestion": true,
  "emmet.useInlineCompletions": true,
  "editor.suggest.matchOnWordStartOnly": false,
  "workbench.editor.tabActionLocation": "left",
  "editor.occurrencesHighlight": "multiFile",
  "typescript.preferences.preferTypeOnlyAutoImports": true,
  "multiDiffEditor.experimental.enabled": true,
  "terminal.integrated.defaultProfile.osx": "fish",
  "remoteHub.uncommittedChangesOnEntry": "none",
  "editor.codeLensFontFamily": "Recursive Mono Linear Static",
  "editor.inlayHints.fontFamily": "Recursive Mono Linear Static",
  "CodeGPT.apiKey": "CodeGPT Plus Beta",
  "accessibility.signals.chatRequestSent": {
    "sound": "on"
  },
  "accessibility.signals.save": {
    "announcement": "userGesture"
  },
  "accessibility.signals.terminalBell": {
    "sound": "on"
  },
  "editor.defaultFormatter": "esbenp.prettier-vscode",
  "[javascript]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode"
  },
  "terminal.integrated.enableVisualBell": true,
  "diffEditor.hideUnchangedRegions.enabled": true,
  "scm.diffDecorationsGutterPattern": {
    "added": true
  },
  "[typescriptreact]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode"
  },
  "github.copilot.editor.enableAutoCompletions": true,
  "[javascript]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode"
  },
  "editor.formatOnPaste": true,
  "editor.formatOnType": true,
  "[jsonc]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode"
  },
  "json.schemas": [
  
  ],
  "explorer.compactFolders": false,
  "explorer.confirmDragAndDrop": false
}

{
  "editor.copyWithSyntaxHighlighting": false,
  "diffEditor.ignoreTrimWhitespace": false,
//   "editor.emptySelectionClipboard": false,
  "workbench.editor.enablePreview": false,
  "window.newWindowDimensions": "inherit",
//   "editor.multiCursorModifier": "ctrlCmd",
  "files.trimTrailingWhitespace": true,
  "diffEditor.renderSideBySide": false,
  "editor.snippetSuggestions": "top",
  "editor.detectIndentation": false,
  "window.nativeFullScreen": true,
  "files.insertFinalNewline": true,
  "files.trimFinalNewlines": true,
//   "workbench.editor.showTabs": "none",
  "editor.minimap.enabled": false,
//   "editor.lineNumbers": "off",
  "editor.guides.indentation": false,

  // Silence the Noise
  "breadcrumbs.enabled": false,
//   "scm.diffDecorations": "none",
//   "editor.hover.delay": 1500,
  "editor.hover.enabled": true,
  "editor.matchBrackets": "never",
  "workbench.tips.enabled": false,
  "editor.colorDecorators": false,
//   "git.decorations.enabled": false,
  "workbench.startupEditor": "none",
  "editor.lightbulb.enabled": "off",
//   "editor.selectionHighlight": false,
  "editor.overviewRulerBorder": false,
  "editor.renderLineHighlight": "none",
  "editor.occurrencesHighlight": "off",
  "problems.decorations.enabled": false,
  "editor.renderControlCharacters": false,
  "editor.hideCursorInOverviewRuler": true,
  "editor.gotoLocation.multipleReferences": "goto",
  "editor.gotoLocation.multipleDefinitions": "goto",
  "editor.gotoLocation.multipleDeclarations": "goto",
  "workbench.editor.enablePreviewFromQuickOpen": false,
  "editor.gotoLocation.multipleImplementations": "goto",
  "editor.gotoLocation.multipleTypeDefinitions": "goto",

  // Typography
  "editor.fontFamily": "Geist Mono, JetBrains Mono, Fira Code",
  "editor.suggestFontSize": 15,
  "editor.suggestLineHeight": 25,
  "terminal.integrated.lineHeight": 1.5,
  "terminal.integrated.fontSize": 16,

  "search.useIgnoreFiles": false,
  "search.exclude": {
      // Hide everything in /vendor, except the "laravel" and "livewire" folder.
      "**/vendor/{[^l],?[^ai]}*": true,
      // Hide everything in /public, except "index.php"
      "**/public/{[^i],?[^n]}*": true,
      "**/node_modules": true,
      "**/dist": true,
      "**/_ide_helper.php": true,
      "**/composer.lock": true,
      "**/package-lock.json": true,
      "storage": true,
      ".phpunit.result.cache": true
  },

  /**
  * Code
  **/
  // Include "-" in word selection.
  "editor.wordSeparators": "`~!@#%^&*()=+[{]}\\|;:'\",.<>/?",
  "emmet.includeLanguages": {
      "blade": "html",
      "vue-html": "html",
      "vue": "html",
      "react": "html",
      "javascript": "html"
  },
  "files.associations": {
      ".php_cs": "php",
      ".php_cs.dist": "php"
  },

  /**
  * PHP
  **/
  "php.suggest.basic": false,

  /**
  * Prettier
  **/
  "[javascript]": {
      "editor.defaultFormatter": "esbenp.prettier-vscode",
      "editor.formatOnSave": true
  },
  "[typescriptreact]": {
      "editor.defaultFormatter": "esbenp.prettier-vscode",
      "editor.formatOnSave": true
  },
  "[tailwindcss]": {
      "editor.defaultFormatter": "esbenp.prettier-vscode",
      "editor.formatOnSave": true
  },
  "[vue]": {
      "editor.defaultFormatter": "esbenp.prettier-vscode",
      "editor.formatOnSave": true
  },
  "[javascriptreact]": {
      "editor.defaultFormatter": "esbenp.prettier-vscode",
      "editor.formatOnSave": true
  },
  "prettier.requireConfig": true,
  "prettier.useEditorConfig": false,
  "explorer.sortOrder": "type",
  "prettier.tabWidth": 4,
  "vetur.format.options.tabSize": 4,
  "workbench.tree.indent": 15,
  "[html]": {
      "editor.defaultFormatter": "apility.beautify-blade",
      "editor.formatOnSave": true
  },
  "editor.wordWrapColumn": 300,
  "files.autoSave": "afterDelay",
  "[css]": {
      "editor.defaultFormatter": "esbenp.prettier-vscode",
      "editor.formatOnSave": true
  },

  "editor.quickSuggestions": {
      "strings": true
  },
  "[jsonc]": {
      "editor.defaultFormatter": "esbenp.prettier-vscode"
  },
  "[json]": {
      "editor.defaultFormatter": "vscode.json-language-features"
  },
  "security.workspace.trust.untrustedFiles": "open",
  "editor.linkedEditing": true,
  "editor.formatOnSave": false,
  // "editor.fontLigatures": false,
  "editor.fontLigatures": "'ss01', 'ss02', 'ss03', 'ss04', 'ss05', 'ss06', 'ss07', 'ss08', 'calt', 'dlig'",
  "diffEditor.wordWrap": "on",
  "notebook.output.wordWrap": true,
  "editor.fontSize": 14,
  "editor.minimap.maxColumn": 250,
  "codesnap.containerPadding": "8em",
  "codesnap.boxShadow": "rgba(0, 0, 0, 0.55) 0px 12px 24px",
  "explorer.confirmDelete": false,
  "editor.accessibilitySupport": "off",
  "chat.editor.wordWrap": "on",
  "editor.wordWrap": "wordWrapColumn",
  "[php]": {
      "editor.defaultFormatter": "bmewburn.vscode-intelephense-client"
  },
  "tailwindCSS.includeLanguages": {
      "plaintext": "html"
  },
  "tailwindCSS.experimental.configFile": null,
  "editor.fontWeight": "400",
  "workbench.activityBar.location": "bottom",
  "workbench.statusBar.visible": false,
  "editor.inlineSuggest.suppressSuggestions": true,
  "codesnap.backgroundColor": "#FFC540",
  "codesnap.showLineNumbers": false,
  "codesnap.roundedCorners": true,
  "editor.padding.top": 16,
  "editor.cursorBlinking": "blink",
  "editor.cursorSmoothCaretAnimation": "on",
  "editor.stickyScroll.enabled": false,
  "editor.lineHeight": 30,

  "editor.tokenColorCustomizations": {
      "textMateRules": [
          {
            "scope": [
              "comment",
              "keyword",
              "variable.language",
              "entity.other.attribute-name.html",
              "entity.other.attribute-name",
              "keyword.control",
              "storage.type",
              "comment",
              "comment.block",
              "comment.line"
            ],
            "settings": {
              "fontStyle": ""
            }
          }
        ]
  },
  "material-icon-theme.saturation": 0,
  "vscode_custom_css.imports": [
      "file:///Users/glennraya/custom-vscode.css",
      "file:///Users/glennraya/vscode-script.js"
  ],
  "workbench.colorTheme": "React Theme",
  "workbench.iconTheme": "eq-material-theme-icons-light",
  "workbench.sideBar.location": "left",
  "material-icon-theme.files.color": "#42a5f5",
"workbench.tree.enableStickyScroll": false,
"json.schemas": [









]
}
// {
// //   "editor.copyWithSyntaxHighlighting": false,
// //   "diffEditor.ignoreTrimWhitespace": false,
// //   "editor.emptySelectionClipboard": false,
// //   "workbench.editor.enablePreview": false,
// //   "window.newWindowDimensions": "inherit",
// //   "editor.multiCursorModifier": "ctrlCmd",
//   "files.trimTrailingWhitespace": true,
//   "diffEditor.renderSideBySide": false,
//   "editor.snippetSuggestions": "top",
//   "editor.detectIndentation": false,
//   "window.nativeFullScreen": true,
//   "files.insertFinalNewline": true,
//   "files.trimFinalNewlines": true,
// //   "workbench.editor.showTabs": "none",
//     // Design and Aesthetic Settings
//     "editor.fontFamily": "Geist Mono, JetBrains Mono, Fira Code",
//     "editor.fontSize": 14,
//     "editor.fontWeight": "400",
//     "editor.fontLigatures": "'ss01', 'ss02', 'ss03', 'ss04', 'ss05', 'ss06', 'ss07', 'ss08', 'calt', 'dlig'",
//     "editor.lineHeight": 30,
//     "terminal.integrated.fontSize": 16,

//     // Restore C/C++ Language Server Settings
//     "C_Cpp.intelliSenseEngine": "Default",
//     "C_Cpp.autocomplete": "Disabled",

//     // Keep Minimal Design Settings
//     "editor.minimap.enabled": false,
//     "breadcrumbs.enabled": false,
//     "editor.guides.indentation": false,

//     // Ensure Hover and Suggestions Work
//     "editor.hover.enabled": true,
//     "editor.quickSuggestions": {
//       "strings": true
//     },

//     // Other Design Preferences from Original Config
//     "workbench.colorTheme": "React Theme",
//     "workbench.iconTheme": "eq-material-theme-icons-light"
//   }
